
Resources:
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          -
            # Use the Website as the CDN origin
            DomainName: !Sub "${AWS::StackName}-${self:custom.websiteBucket}-${AWS::AccountId}.s3.${self:custom.region}.amazonaws.com"
            # Origin ID
            Id: !Ref Website
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
        Enabled: true
        DefaultRootObject: index.html
        #
        # Configure the caching behavior for our CDN
        #
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          MinTTL: 86400  # 1 day
          MaxTTL: 31536000  # 1 year
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ## The origin id defined above
          TargetOriginId: !Ref Website
          ViewerProtocolPolicy: "redirect-to-https"   # we want to force HTTPS
        ## The certificate to use when viewers use HTTPS to request objects.
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'

Outputs:
  WebsiteDistributionID:
    Description: CloudFront Distribution ID for the website cache
    Value: !Ref WebsiteDistribution
    Export:
      Name: !Sub "${AWS::StackName}-WebsiteDistributionID"
  AppURL:
    Description: CloudFront URL for cached app
    Value: !GetAtt WebsiteDistribution.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-AppURL"
      